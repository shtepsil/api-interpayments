<?php

namespace backend\controllers;

use common\components\Debugger as d;
use common\models\Clients;
use common\models\WhiteList;
use shadow\helpers\CryptoHelper;
use shadow\widgets\AdminActiveForm;
use Yii;
use yii\helpers\Inflector;
use yii\helpers\Url;
use yii\web\Response;

class WhiteListController extends MainController
{
    public function init()
    {
        $this->model = new WhiteList();
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function actionSave()
    {
//        sleep(5);
        $record = $this->model;
        $post = Yii::$app->request->post();
//        d::ajax($post);
        if ($id = Yii::$app->request->post('id')) {
            $record = $record->findOne($id);
        }
        if (isset($post['scenario'])) {
            $record->scenario = $post['scenario'];
        }
        if ($record->load(Yii::$app->request->post())) {
            if (Yii::$app->request->isAjax) {
                Yii::$app->response->format = Response::FORMAT_JSON;
                $record->on($record::EVENT_AFTER_VALIDATE, [$record, 'validateAll']);
                if ($errors = AdminActiveForm::validate($record)) {
                    $result['errors'] = $errors;
                } else {
//                        d::ajax('Сохраняем');
                    $event = $record->isNewRecord ? $record::EVENT_BEFORE_INSERT : $record::EVENT_BEFORE_UPDATE;
                    $record->on($event, [$record, 'saveAll']);
                    $event_clear = $record->isNewRecord ? $record::EVENT_AFTER_INSERT : $record::EVENT_AFTER_UPDATE;
                    $record->on($event_clear, [$record, 'saveClear']);

                    $save = $record->save(false);
                    if ($save) {
                        $result['ip_id'] = $record->id;
                        $result['message']['success'] = 'Сохранено!';
                    } else {
                        $result['message']['error'] = 'Произошла ошибка!';
                    }
                }
                return $result;
            } else {
                $record->validate();
            }
        }
        if (!Yii::$app->request->isAjax) {
            return $this->goBack();
        }
    }

    public function actionRemove()
    {
        Yii::$app->response->format = Response::FORMAT_JSON;
        $id = Yii::$app->request->post('id');
        $item = $this->model->findOne($id);
//        d::ajax($id);
        if ($item AND $item->delete()) {
            $result['message']['success'] = 'Удалено!';
        } else {
            $result['message']['error'] = 'Ошибка удаления!';
        }
        return $result;
    }

}//Class
